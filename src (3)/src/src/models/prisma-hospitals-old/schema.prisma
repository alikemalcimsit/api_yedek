generator hospitals {
  provider = "prisma-client-js"
  output   = "../../../generated/hospitals"
}

generator default {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_HOSPITALS")
}

model channels {
  channelid String  @id @db.VarChar(50)
  name      String? @db.VarChar(50)
  host      String? @db.VarChar(30)
  server    String? @db.VarChar(50)
}

model hospitals {
  id                Int              @id @default(autoincrement())
  domain            String           @db.VarChar(100)
  title             String           @db.VarChar(255)
  logo              String           @db.VarChar(500)
  folder            String           @db.VarChar(100)
  app_id            String?          @db.VarChar(20)
  hospital_list_id  String?          @db.VarChar(20)
  wazzup_api        String?          @db.VarChar(255)
  db_name           String           @db.VarChar(100)
  host              String           @default("localhost") @db.VarChar(100)
  username          String           @db.VarChar(100)
  password          String           @db.VarChar(255)
  sms_sender        String?          @db.VarChar(50)
  sms_title         String?          @db.VarChar(50)
  sms_kullanici_adi String?          @db.VarChar(50)
  sms_sifre         String?          @db.VarChar(50)
  fb_page_id        String?
  fb_leadgen_token  String?
  created_at        DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?        @default(now()) @db.Timestamptz(6)
  status            hospital_status? @default(active)
  server            String?          @db.VarChar(20)
}

model user_tokens {
  id         Int       @id @default(autoincrement())
  user_id    Int
  token      String
  expires_at DateTime  @db.Timestamptz(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id          Int           @id @default(autoincrement())
  username    String        @unique @db.VarChar(50)
  password    String        @db.VarChar(100)
  name        String?       @db.VarChar(100)
  phone       String?       @db.VarChar(20)
  role        String        @default("user") @db.VarChar(20)
  created_at  DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?     @default(now()) @db.Timestamptz(6)
  user_tokens user_tokens[]
}

model crmlogs {
  id            Int       @id @default(autoincrement())
  usersystemid  Int?
  action        String?   @db.VarChar(255)
  created_at    DateTime? @db.Timestamp(6)
  details       String?
  request_body  String?
  response_body String?
  response_time Int?
  http_status   Int?
  error_message String?
  header        String?
  host          String?   @db.VarChar(100)
}

enum hospital_status {
  active
  inactive
}
